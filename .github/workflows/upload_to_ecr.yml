name: Push ECR for Rails and Nginx

on:
  push:
    branches:
      - main

jobs:
    PushRailstoECR:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout
              uses: actions/checkout@v3 
            
            - uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-region: ap-northeast-1
                role-to-assume: 'arn:aws:iam::730335441282:role/GithubActionsRoleforASS'

            - name: Login ECR
              run: |
                aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_ENDPOINT }}

            - name: Image Build & Push to Rails ECR
              env:
                RAILS_REGISTRY: ${{ secrets.RAILS_REGISTRY }}
                RAILS_REPOSITORY: "ass-rails-ecr-staging"
                IMAGE_TAG: stg
              run: |
                docker build . --tag --no-cache -f ./docker/staging/Dockerfile --platform linux/amd64 ${{ env.RAILS_REGISTRY }}/${{ env.RAILS_REPOSITORY }}:${{ env.IMAGE_TAG }}
                docker push ${{ env.RAILS_REGISTRY }}/${{ env.RAILS_REPOSITORY }}:${{ env.IMAGE_TAG }}
              working-directory: ./backend

            - name: Image Build & Push to Nginx ECR
              env:
                NGINX_REGISTRY: ${{ secrets.NGINX_REGISTRY }}
                NGINX_REPOSITORY: "ass-nginx-ecr-staging"
                IMAGE_TAG: stg
              run: |
                docker build . --no-cache --platform linux/amd64 ${{ env.NGINX_REGISTRY }}/${{ env.NGINX_REPOSITORY }}:${{ env.IMAGE_TAG }}
                docker push ${{ env.NGINX_REGISTRY }}/${{ env.NGINX_REPOSITORY }}:${{ env.IMAGE_TAG }}
              working-directory: ./nginx