name: Static Analytics

on:
    push:

jobs:
    rspec:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: .
        services:
            mysql:
                image: mysql:latest
                ports:
                    - 3306:3306
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes

        steps:
            - name: Checkout Code
              uses: actions/checkout@v2

            - name: SetUp Ruby
              uses: ruby/setup-ruby@v1
              with:
                ruby-version: 3.2.2
                bundler-cache: true

            - name: Cache NodeModules
              uses: actions/cache@v3
              with:
                path: ./frontend/app/node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }} # キャッシュのキーを指定します。
                restore-keys: |
                    ${{ runner.os }}-node-

            - name: Bundler and Gem install
              run: |
                gem install bundler
                bundle install
              working-directory: ./backend/app

            - name: Database craete and Migration
              run: |
                bundle exec rails db:create RAILS_ENV=test
                bundle exec rails db:migrate RAILS_ENV=test
              working-directory: ./backend/app

            - name: Exec RSpec
              run: bundle exec rspec
              working-directory: ./backend/app

    rubocop:
        runs-on: ubuntu-latest
        defaults:
            run:
              working-directory: .
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
      
            - name: Set up Ruby
              uses: ruby/setup-ruby@v1
              with:
                ruby-version: 3.2.2
                bundler-cache: true
            
            - name: Bundler and Gem install
              run: |
                  gem install bundler
                  bundle install
              working-directory: ./backend/app

            - name: Run rubocop
              run: bundle exec rubocop
              working-directory: ./backend/app

